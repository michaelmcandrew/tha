<?php// $Id: MtlUtils.module,v 1.263.2.4 2010/11/02 10:16:54 goba Exp $function mtl_utils_civicrm_contactListQuery( &$query, $name, $context, $id ) {    if ($context == 'navigation') {        $query = "SELECT cc.id as id, CONCAT_WS( ' :: ', sort_name, email, phone, street_address, city, ste.name, coy.name ) as data, sort_name                       FROM civicrm_contact cc LEFT JOIN civicrm_email eml ON ( cc.id = eml.contact_id AND eml.is_primary = 1 )                       LEFT JOIN civicrm_phone phe ON ( cc.id = phe.contact_id AND phe.is_primary = 1 )                       LEFT JOIN civicrm_address sts ON ( cc.id = sts.contact_id AND sts.is_primary = 1)                       LEFT JOIN civicrm_state_province ste ON ( sts.state_province_id = ste.id )                       LEFT JOIN civicrm_country coy ON ( sts.country_id = coy.id )                      WHERE sort_name LIKE '%$name%' OR external_identifier = '$name'                      LIMIT 0,10";     }    if ($context == 'customfield' && $id == 96) {        $query = "SELECT cc.id as id, display_name as data                       FROM civicrm_contact cc                        WHERE contact_sub_type = 'Region'                      LIMIT 0,13";    }    }function mtl_utils_civicrm_tokens( &$tokens ) {    $tokens['contact'] = array( 'member_rep_name', 'member_rep_jobtitle' , 'chief_executive_name', 'chief_executive_jobtitle' );}function mtl_utils_civicrm_tokenValues( &$values, &$contactIDs ) {    //print_r ($values);exit;        if ( is_array( $contactIDs ) ) {        $contactIDString = implode( ',', array_values( $contactIDs ) );        $single = false;    } else {        $contactIDString = "( $contactIDs )";        $single = true;    }        if ( is_array( $contactIDs ) ) {            while(list($key,$val) = each($contactIDs)) {                         $contactIDString = $val;                        require_once "api/v2/Relationship.php";            $params = array(                        'contact_id'         => $contactIDString                        );                              //echo '<pre>';print_r($params);echo '</pre>';                              $result =  civicrm_contact_relationship_get ($params );            //echo '<pre>';print_r($result);echo '</pre>';exit;                        if($result['is_error'] == 0 ) {                            $temp_array = $result['result'];                                while( list( $k, $v ) = each($temp_array) ) {                        if( $v['civicrm_relationship_type_id'] == 10 AND $v['relation'] == 'Member Rep') {                            $member_rep_id = $v['cid'];                        }                        if( $v['civicrm_relationship_type_id'] == 11 AND $v['relation'] == 'Chief Executive is' ) {                            $chief_exe_id = $v['cid'];                        }                    }                                require_once "api/v2/Contact.php";                $params    = array(                       'contact_id' => $member_rep_id,                       'return.sort_name' => 1,                       'return.display_name' => 1,                       'return.job_title' => 1                       );                $retrieved = &civicrm_contact_get( $params );                                //print_r ($retrieved);                                if ( ! array_key_exists( $contactIDString, $values ) ) {                     $values[$contactIDString] = array( );                }                                $value =& $values[$contactIDString];                                $value['member_rep_name'] = $retrieved[$member_rep_id]['display_name'];                if( empty($retrieved[$member_rep_id]['display_name']) ) {                     $value['member_rep_name'] = $retrieved[$member_rep_id]['sort_name'];                    }                $value['member_rep_jobtitle'] = $retrieved[$member_rep_id]['job_title'];                                $params    = array(                       'contact_id' => $chief_exe_id,                       'return.sort_name' => 1,                       'return.display_name' => 1,                       'return.job_title' => 1                       );                $retrieved = &civicrm_contact_get( $params );                                //print_r ($retrieved);                                if ( ! array_key_exists( $contactIDString, $values ) ) {                     $values[$contactIDString] = array( );                }                                $value =& $values[$contactIDString];                                $value['chief_executive_name'] = $retrieved[$chief_exe_id]['display_name'];                if( empty($retrieved[$chief_exe_id]['display_name']) ) {                     $value['chief_executive_name'] = $retrieved[$chief_exe_id]['sort_name'];                    }                $value['chief_executive_jobtitle'] = $retrieved[$chief_exe_id]['job_title'];                                            }            }    }    //print_r ($value);exit;}function mtl_utils_civicrm_postProcess( $formName, &$form ){        if ( ! is_a($form, 'CRM_Contribute_Form_Contribution_Confirm') ) {        return;    }        require_once 'CRM/Core/Session.php';    $session = CRM_Core_Session::singleton( );                if ($formName == 'CRM_Contribute_Form_Contribution_Confirm' && $form->getVar( '_id' ) == 5) {        if (!empty($form->_params['email-5'])) {                        $session->set( 'registration_email' , $form->_params['email-5']);            }    }            civicrm_initialize( true );    require_once 'CRM/Core/Config.php';    $config =& CRM_Core_Config::singleton( );       require_once "api/v2/Contact.php";    require_once "api/v2/Relationship.php";    require_once "api/v2/GroupContact.php";    // if selected "on behalf of organization" then get that org ID    if ($form->_params['is_for_organization'] == 1) {         //get the Organization id that was submitted with this form - have to do it in a roundabout way        // get contacts related to contact submitting form (assumes the contact id is always set)        $relationParams = array( 'contact_id' => $form->_values['related_contact'] );        $relatedContacts = & civicrm_relationship_get( $relationParams );        if ( civicrm_error ( $relatedContacts )) { return $relatedContacts['error_message']; }        //CRM_Core_Error::debug( $relatedContacts );        //use this email to ensure related org is the right one        $orgEmail = $form->_params['onbehalf_location']['email']['1']['email'];        // loop through multi-dimensional array and look for email that         // matches the org's email from the form        foreach ($relatedContacts['result'] as $related) {            foreach ($related as $relate) {               if ($relate == $orgEmail) { // it's probably the right org                   $relatedOrgID = $related['cid'];               }            }         }    } // endif "on behalf of org" is selected        //$org_id = $session->get( 'org_id');    //if (!empty($org_id)) $relatedOrgID = $org_id;          /* Create the approval required activity for new member requests */    //require_once 'CRM/Activity/DAO/Activity.php';    //$activity = new CRM_Activity_DAO_Activity( );    //$activity->source_contact_id  = $relatedOrgID;    //$activity->activity_type_id   = 46;    //$activity->activity_date_time = CRM_Utils_Date::getToday( null, 'YmdHis' );    //$activity->status_id          = 1;    //$activity->subject            = 'New Member Needs Approval';    //$activity->target_contact_id  = $relatedOrgID;     //$activity->save( );        require_once 'api/v2/Activity.php';     $params = array(       'activity_type_id' => 46,       'source_contact_id' => $relatedOrgID,       'target_contact_id' => $relatedOrgID,       'subject' => 'New Member Needs Approval',       'status_id' => 1,       'activity_date_time' => date('YmdHis')     );          $act = civicrm_activity_create($params);          //print_r ($act);     //exit;          $activity_id = $act['id'];    #print_r ($form);//print $activity->id;//print 'x<BR>';//print $relatedOrgID;//print 'x<BR>';//print $form->getVar( '_id' );//print 'x<BR>';    $sql = "SELECT * FROM civicrm_group_contact WHERE group_id = '38'";    $dao = CRM_Core_DAO::executeQuery( $sql );        //$activity_id = $activity->id;         while($dao->fetch()) {        require_once 'CRM/Activity/DAO/ActivityAssignment.php';        $assignment = new CRM_Activity_DAO_ActivityAssignment( );        $assignment->activity_id = $activity_id;        $assignment->assignee_contact_id = $dao->contact_id;        //$assignment->with_contact_id = $relatedOrgID;        $assignment->save( );    }        }function mtl_utils_civicrm_post( $op, $objectName, $objectId, &$objectRef ){        if (($op == 'create' || $op == 'edit') && $objectName == 'Organization') {        require_once 'CRM/Core/Session.php';        $session = CRM_Core_Session::singleton( );        $session->set( 'org_id' , $objectId);    }        if ($op == 'create' && $objectName == 'Profile') {        require_once 'CRM/Utils/System.php';        if ($objectRef['uf_group_id'] == 16) {            drupal_goto( 'civicrm/contribute/transact' , 'reset=1&id=1');            CRM_Utils_System::civiExit( );        }        if ($objectRef['uf_group_id'] == 14) {            drupal_goto( 'civicrm/contribute/transact' , 'reset=1&id=3');            CRM_Utils_System::civiExit( );        }        /*if ($objectRef['uf_group_id'] == 29) {            drupal_goto( 'civicrm/contribute/transact' , 'reset=1&id=6');            CRM_Utils_System::civiExit( );        }*/    }                if ($op == 'edit' && $objectName == 'Profile') {        require_once 'CRM/Utils/System.php';        if ($objectRef['uf_group_id'] == 17) {            drupal_goto( 'civicrm/contribute/transact' , 'reset=1&id=2');            CRM_Utils_System::civiExit( );        }    }        if ($op == 'edit' && $objectName == 'Activity') {                $activity_id = $objectId;        $activity_type_id = $objectRef->activity_type_id;        //print_r ($objectRef);exit;                $sql = "SELECT * FROM civicrm_activity_target WHERE activity_id = '$activity_id'";        $dao = CRM_Core_DAO::executeQuery( $sql );        $dao->fetch();                //print_r ($objectRef);exit;                if (($objectRef->activity_type_id == 46 || $objectRef->activity_type_id == 47 || $objectRef->activity_type_id == 48) && $objectRef->status_id == 2) {                      if ($objectRef->activity_type_id == 46) {              $activity_type_id = 47;              $subject = "EC Approval";          }              if ($objectRef->activity_type_id == 47) {              $activity_type_id = 48;              $subject = "Send Invoice/Welcome Pack";          }                  if ($objectRef->activity_type_id == 48) {              $activity_type_id = 50;              $subject = "	Awaiting Payment";          }                    require_once 'api/v2/Activity.php';           $params = array(             'activity_type_id' => $activity_type_id,             'source_contact_id' => $objectRef->source_contact_id,             'target_contact_id' => $dao->target_contact_id,             'subject' => $subject,             'status_id' => 1,             'activity_date_time' => date('YmdHis')           );                      $act = civicrm_activity_create($params);                      //print_r ($act);           //exit;                      $activity_id = $act['id'];                      $sql = "SELECT * FROM civicrm_group_contact WHERE group_id = '38'";           $dao = CRM_Core_DAO::executeQuery( $sql );                       while($dao->fetch()) {                require_once 'CRM/Activity/DAO/ActivityAssignment.php';                $assignment = new CRM_Activity_DAO_ActivityAssignment( );                $assignment->activity_id = $activity_id;                $assignment->assignee_contact_id = $dao->contact_id;                $assignment->save( );           }        }                     if ($objectRef->activity_type_id == 46 && $objectRef->status_id == 3) {                      require_once 'api/v2/Activity.php';           $params = array(             'activity_type_id' => 2,             'source_contact_id' => $objectRef->source_contact_id,             'target_contact_id' => $dao->target_contact_id,             'subject' => 'Membership - Not Approved. Follow up',             'status_id' => 1,             'activity_date_time' => date('YmdHis')           );                      //print_r ($params);                      $act = civicrm_activity_create($params);                      //print_r ($act);           //exit;                      $activity_id = $act['id'];                      $sql = "SELECT * FROM civicrm_group_contact WHERE group_id = '38'";           $dao = CRM_Core_DAO::executeQuery( $sql );                       while($dao->fetch()) {                require_once 'CRM/Activity/DAO/ActivityAssignment.php';                $assignment = new CRM_Activity_DAO_ActivityAssignment( );                $assignment->activity_id = $activity_id;                $assignment->assignee_contact_id = $dao->contact_id;                $assignment->save( );           }        }            }        }function mtl_utils_civicrm_buildForm( $formName, &$form ) {        if ($formName == 'CRM_Profile_Form_Edit' && $form->getVar( '_gid' ) == 17) {        require_once 'CRM/Core/Session.php';        $session = CRM_Core_Session::singleton( );        $org_id = $session->get('org_id');                if(!empty($org_id)) {                    require_once 'api/v2/Contact.php';                     $params = array(                            'contact_id'=>$org_id                            );                                        $retrieved = &civicrm_contact_get( $params );                                                 //echo "<pre>";print_r ($retrieved);echo "</pre>";exit;                        $sql = "SELECT * FROM civicrm_contact WHERE id = '$org_id'";            $dao = CRM_Core_DAO::executeQuery( $sql );            $dao->fetch();                        $temp_hash = $dao->hash;            $ts = time( );            $live = 24 * 7;            $cs = md5( "{$temp_hash}_{$org_id}_{$ts}_{$live}" );            $cs1 = $cs."_".$ts."_".$live;                        require_once 'CRM/Utils/System.php';            //$id = $_GET['id'];            if ($_GET['id']== null) {              drupal_goto( 'civicrm/profile/edit' , 'reset=1&gid=17&id='.$org_id.'&cs='.$cs1);              CRM_Utils_System::civiExit( );            }                        $defaults['organization_name'] = $retrieved[$org_id]['display_name'];            $defaults['street_address-Primary'] = $retrieved[$org_id]['street_address'];            $defaults['supplemental_address_1-Primary'] = $retrieved[$org_id]['supplemental_address_1'];            $defaults['supplemental_address_2-Primary'] = $retrieved[$org_id]['supplemental_address_2'];            $defaults['city-Primary'] = $retrieved[$org_id]['city'];            $defaults['postal_code-Primary'] = $retrieved[$org_id]['postal_code'];            $defaults['state_province-Primary'] = $retrieved[$org_id]['state_province_id'];            $defaults['country-Primary'] = $retrieved[$org_id]['country_id'];            //$defaults['email[1][email]'] = $retrieved[$org_id]['email'];            //$defaults['phone[1][phone]'] = $retrieved[$org_id]['phone'];                        //$defaults['email-5'] = $session->get('registration_email');                        $form->setDefaults($defaults);        }        }    if ($formName == 'CRM_Contribute_Form_Contribution_Main' && ($form->getVar( '_id' ) == 1 || $form->getVar( '_id' ) == 2 || $form->getVar( '_id' ) == 3)) {        require_once 'CRM/Core/Session.php';        $session = CRM_Core_Session::singleton( );        $org_id = $session->get('org_id');                if(!empty($org_id)) {                    require_once 'api/v2/Contact.php';                     $params = array(                            'contact_id'=>$org_id                            );                                        $retrieved = &civicrm_contact_get( $params );                                                 //echo "<pre>";print_r ($retrieved);echo "</pre>";exit;                        $defaults['organization_name'] = $retrieved[$org_id]['display_name'];            $defaults['address[1][street_address]'] = $retrieved[$org_id]['street_address'];            $defaults['address[1][supplemental_address_1]'] = $retrieved[$org_id]['supplemental_address_1'];            $defaults['address[1][supplemental_address_2]'] = $retrieved[$org_id]['supplemental_address_2'];            $defaults['address[1][city]'] = $retrieved[$org_id]['city'];            $defaults['address[1][postal_code]'] = $retrieved[$org_id]['postal_code'];            $defaults['address[1][state_province_id]'] = $retrieved[$org_id]['state_province_id'];            $defaults['address[1][country_id]'] = $retrieved[$org_id]['country_id'];            $defaults['email[1][email]'] = $retrieved[$org_id]['email'];            $defaults['phone[1][phone]'] = $retrieved[$org_id]['phone'];                        $defaults['email-5'] = $session->get('registration_email');                        $form->setDefaults($defaults);        }         }}