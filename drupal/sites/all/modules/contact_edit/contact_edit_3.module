<?php
// $Id: school.module,v 1.263.2.4 2009/09/14 10:16:54 goba Exp $

/**
 * @file
 * Enables your site to capture votes on different topics in the form of multiple
 * choice questions.
 */

/**
 * Implementation of hook_perm
 */
function contact_edit_perm() {
  return array('access site-wide', 'edit helpline detail', 'edit my detail', 'administer site-wide');
}


/**
 * Implementation of hook_menu().
 */
function contact_edit_menu() {
 //echo 'hi'; exit;
 $items['edit_my_profile'] = array(
    'title' => 'Edit My Detail',
    'page callback' => 'contact_my_edit_page',
    'access arguments' => array('edit my detail'),
    'type' => MENU_NORMAL_ITEM,
  );
  
  $items['edit_emp_profile'] = array(
    'title' => 'Edit Helpline Detail',
    'page callback' => 'contact_edit_edit_page',
    'access arguments' => array('edit helpline detail'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}


function contact_edit_form_alter(&$form, &$form_state, $form_id){
	//echo "<pre>"; print_r($form); exit;//print_r($form_state); 
	//print_r($form_id); exit; //echo "</pre>"; 
	
	/*if($form_id == 'user_register'){
			//echo 'hello'; exit;
			//$form['account']['name']['#size'] = 30;
			//$form['account']['mail']['#size'] = 30;
			//break;
			$form['account']['fname'] = array('#type' => 'textfield',
				'#title' => t('First Name'),
				'#maxlength' => 100,
				'#default_value' => '',
				'#description' => t("Enter your first name."),
				'#required' => TRUE,
			);
			$form['account']['lname'] = array('#type' => 'textfield',
				'#title' => t('Last Name'),
				'#maxlength' => 100,
				'#default_value' => '',
				'#description' => t("Enter your last name."),
				'#required' => TRUE,
			);
			$form['account']['empname'] = array('#type' => 'textfield',
				'#title' => t('Employer Name'),
				'#maxlength' => 100,
				'#default_value' => '',
				'#description' => t("Enter your employer name."),
				'#required' => TRUE,
			);
			$form['account']['cid'] = array('#type' => 'textfield',
				'#title' => t('Contact ID (cid)'),
				'#maxlength' => 100,
				'#size' => 6,
				'#default_value' => '',
				'#description' => t("Enter your cid."),
				'#required' => TRUE,
			);
	}*/
}

function contact_edit_user($op, &$edit, &$account, $category = NULL) {
	
	// Do the validations
	/*if ($op == 'validate' && $edit['form_id'] == 'user_register') {
		//echo "<pre>"; echo $op; print_r($edit); print_r($account); print_r($category); echo "</pre>"; //exit;
         
         // Validate Contact Information
         $contactID = $account['cid'];
		 
		if (module_exists('civicrm')) {
			civicrm_initialize(TRUE);
				
			require_once "api/v2/Contact.php";
			$params = array(
							'contact_id'		=> $account['cid'],
							'email'   			=> $account['mail'],
							'first_name'		=> $account['fname'],
							'last_name'			=> $account['lname'],
							'current_employer'	=> $account['emp_name'],
							);
			$contacts = civicrm_contact_search( $params );
				
			//echo "<pre>"; print_r($contacts); echo "</pre>"; exit;
			
						
			if(is_array($contacts) && count($contacts) > 0){ }
			else{
				// Display form error
				form_set_error('cid', t('Your credentials does not match'));
			}
		}
		else{
			// civicrm module not exist error
			$msg  = "Error: civicrm module does not exist";
			form_set_error('cid', t($msg));
		}
         
		 
         
    }*/
}


function contact_edit_edit_page() {
	global $user;
		
	$output .= drupal_get_form('contact_edit_edit_form');
	return $output;
	
}

function contact_edit_edit_form()
{
	## just for testing ############################################
	/*civicrm_initialize(TRUE);
	require_once "api/v2/Contact.php";
	$params = array('id'   => 15547, 'return.custom_6'   => 1, );
	$contacts = civicrm_contact_search( $params );
	echo "<pre>"; print_r($contacts); echo "</pre>"; exit;*/
		
	/*require_once "CRM/Core/BAO/CustomValueTable.php";
	$civipar = array("entityID" =>  15547,);
	$civires = CRM_Core_BAO_CustomValueTable::getValues($civipar);
	echo "<pre>"; print_r($civires); echo "</pre>"; exit;*/
	##################################################################

	
	##################################################################
	######### code start #############################################
	
	############ get user'd employer info from civicrm ##########
	global $user;
	
	
	if (module_exists('civicrm')) {
		civicrm_initialize(TRUE);
		require_once "api/v2/Contact.php";
		
		### get contact id from user's emailID ####
		$params = array('email'   => $user->mail,);
		$contacts = civicrm_contact_search( $params );
			foreach($contacts as $cid => $contact){
				break;
			}
		//echo "<pre>"; print_r($contact); echo "</pre>"; exit;
		
		### get contact's employer ID ####
		$params = array('contact_type'   => 'Organization',
						'display_name'   => '"'.$contact['current_employer'].'"',
						);
		$e_contacts = civicrm_contact_search( $params );
			foreach($e_contacts as $eid => $econtact){
				break;
			}
		//echo "<pre>"; print_r($econtact); echo "</pre>"; exit;
		
		### getting employer custom detail ####
		require_once "CRM/Core/BAO/CustomValueTable.php";
		$params = array("entityID" =>  $eid, 'custom_6' => 1, 'custom_9' => 1, 'custom_10' => 1, 'custom_12' => 1, 'custom_21' => 1,);
		$help_detail = CRM_Core_BAO_CustomValueTable::getValues($params);
		//echo "<pre>"; print_r($help_detail); echo "</pre>"; //exit;
		
		// getting id
		$icount = 1;
		foreach($help_detail as $kfield => $vfield){
			if(substr($kfield, 0, 6) == 'custom')
			{	
				##break;
				$kfield_arr = explode("_", $kfield);
				
				if($icount == count($help_detail))
					$aname_custom_id = $kfield_arr[2];
				if($icount == count($help_detail)-1)
					$custom_id = $kfield_arr[2];
			}
			
			$icount++;
		}
		
		##$kfield_arr = explode("_", $kfield);
		##$custom_id = $kfield_arr[2];
		//echo $aname_custom_id."   ".$custom_id; exit;
		
		
		
		### getting Provider & rated checkbox options ####
		$provider_list	= array();
		$rated_list	= array();
		
		require_once 'CRM/Core/DAO/OptionGroup.php';
        $oGroup =& new CRM_Core_DAO_OptionGroup( );
		$oGroup->whereAdd("label = 'Provider'");
		$oGroup->find(true);
				
		require_once 'CRM/Core/DAO/OptionValue.php';
        $oValue =& new CRM_Core_DAO_OptionValue( );
		$oValue->whereAdd('is_active = 1 AND option_group_id = '.$oGroup->id);
		$oValue->find();
		while($oValue->fetch()){
			//$provider_list[$oValue->id]['value'] 	= $oValue->value;
			//$provider_list[$oValue->id]['name'] 	= $oValue->name;
			//$provider_list[$oValue->id]['label'] 	= $oValue->label;
			$provider_list[$oValue->value] = t($oValue->label);
		}
		
		// rated
		$oGroup =& new CRM_Core_DAO_OptionGroup( );
		$oGroup->whereAdd("label = 'Rated'");
		$oGroup->find(true);
		
		$oValue =& new CRM_Core_DAO_OptionValue( );
		$oValue->whereAdd('is_active = 1 AND option_group_id = '.$oGroup->id);
		$oValue->find();
		while($oValue->fetch()){
			//$rated_list[$oValue->id]['value'] 	= $oValue->value;
			//$rated_list[$oValue->id]['name'] 		= $oValue->name;
			//$rated_list[$oValue->id]['label'] 	= $oValue->label;
			$rated_list[$oValue->value] = t($oValue->label);
		}
		
		//echo "<pre>"; print_r($provider_list); print_r($rated_list); echo "</pre>"; exit;
		
		### getting default provider & rated list
		//const VALUE_SEPERATOR = "";
		
		$default_provider_list	= explode("", $help_detail['custom_10_'.$custom_id]);
		$default_rated_list 	= explode("", $help_detail['custom_12_'.$custom_id]);
		
		//echo "<pre>"; print_r($default_provider_list); print_r($default_rated_list); echo "<pre>"; exit;
		
		
		##### getting contact's phone & fax detail
		require_once "CRM/Core/DAO/Phone.php";
		$phone = new CRM_Core_DAO_Phone();
		$phone->whereAdd('contact_id = '.$cid);
		$phone->find();
		
		while($phone->fetch()){
			//echo "<pre>"; print_r($phone); echo "</pre>";
			if($phone->phone_type_id == 1)
				$contact['phone_no'] = $phone->phone;
			else if($phone->phone_type_id == 3)
				$contact['fax_no'] = $phone->phone;
		}
		
		//echo "<pre>"; print_r($contact); echo "</pre>"; exit;
		
		### build employer's edit form ####################
		
		$form['#token'] = $user->uid ? $user->name . $user->mail : '';
		
		$form['empID'] = array('#type' => 'value', '#value' => $eid);
		$form['customID'] = array('#type' => 'value', '#value' => $custom_id);
		$form['aname_customID'] = array('#type' => 'value', '#value' => $aname_custom_id);
		$form['emailID'] = array('#type' => 'value', '#value' => $contact['email_id']);
		$form['cID'] = array('#type' => 'value', '#value' => $cid);
		
		$form['helpline_name'] = array('#type' => 'textfield',
		'#title' => t('Helpline Name'),
		'#maxlength' => 255,
		'#size'	=> 50,
		'#default_value' => $help_detail['custom_9_'.$custom_id],);
		
		
		$form['helpline_no'] = array('#type' => 'textfield',
		'#title' => t('Helpline Number'),
		'#maxlength' => 255,
		'#size'	=> 50,
		'#default_value' => $help_detail['custom_6_'.$custom_id],);
	
		
				
		$form['provider'] = array(
		  '#type' => 'checkboxes',
		  '#title' => t('Provider'),
		  '#default_value' => $default_provider_list,
		  '#options' => $provider_list,);
		
		$form['rated'] = array(
		  '#type' => 'checkboxes',
		  '#title' => t('Rated'),
		  '#default_value' => $default_rated_list,
		  '#options' => $rated_list,);
		
		
		$form['street_address'] = array('#type' => 'textfield',
		'#title' => t('Address line 1'),
		'#maxlength' => 255,
		'#size'	=> 50,
		'#default_value' => $econtact['street_address'],);
		
		$form['supplemental_address_1'] = array('#type' => 'textfield',
		'#title' => t('Address line 2'),
		'#maxlength' => 255,
		'#size'	=> 50,
		'#default_value' => $econtact['supplemental_address_1'],);
		
		$form['supplemental_address_2'] = array('#type' => 'textfield',
		'#title' => t('Address line 3'),
		'#maxlength' => 255,
		'#size'	=> 50,
		'#default_value' => $econtact['supplemental_address_2'],);
		
		$form['city'] = array('#type' => 'textfield',
		'#title' => t('City'),
		'#maxlength' => 150,
		'#size' => 20,
		'#default_value' => $econtact['city'],);
		
		$form['postal_code'] = array('#type' => 'textfield',
		'#title' => t('Postal Code'),
		'#maxlength' => 150,
		'#size' => 20,
		'#default_value' => $econtact['postal_code'],);
				
		$form['additional_name'] = array('#type' => 'textfield',
		'#title' => t('Organization Name (if different from Helpline Name)'),
		'#maxlength' => 255,
		'#size'	=> 50,
		'#default_value' => $help_detail['custom_21_'.$aname_custom_id],);
		
		
		
		
		
		
		
		
		
		/*$form['pdetail_wrapper'] = array(
		'#prefix' => '<div id="pdetail_id">',
		'#suffix' => '</div>',
		'#value' => 'Your contact details',
	     );*/
		 
		$form['first_name'] = array('#type' => 'textfield',
		'#title' => t('First Name'),
		'#maxlength' => 255,
		'#size'	=> 50,
		'#default_value' => $contact['first_name'],
		'#prefix' => '<hr><br /> <br /><strong><i>Your contact details</i></strong>',);
		
		$form['last_name'] = array('#type' => 'textfield',
		'#title' => t('Last Name'),
		'#maxlength' => 255,
		'#size'	=> 50,
		'#default_value' => $contact['last_name'],);
		
		$form['phone_no'] = array('#type' => 'textfield',
		'#title' => t('Phone'),
		'#maxlength' => 150,
		'#size' => 20,
		'#default_value' => $contact['phone_no'],);
		
		$form['fax_no'] = array('#type' => 'textfield',
		'#title' => t('Fax'),
		'#maxlength' => 150,
		'#size' => 20,
		'#default_value' => $contact['fax_no'],);
		
		$form['email'] = array('#type' => 'textfield',
		'#title' => t('Email'),
		'#maxlength' => 255,
		'#size'	=> 50,
		'#default_value' => $contact['email'],);
		
		$form['submit'] = array('#type' => 'submit', 
		'#value' => t('Update'),);

		return $form;
	}
	else{
		// civicrm module not exist
		echo "Error: civicrm module does not exist";
	}
}


function contact_edit_edit_form_validate($form, &$form_state) 
{
    
}

function contact_edit_edit_form_submit($form, &$form_state){
	### update employer's helpline detail ##############
	//echo "<pre>"; print_r($form); print_r($form_state); echo "</pre>"; exit;
	
	$customid			= $form['customID']['#value'];
	$aname_customid		= $form['aname_customID']['#value'];
	$eid				= $form['empID']['#value'];
	$cid				= $form['cID']['#value'];
	$emailid			= $form['emailID']['#value'];
		
	$helpline_no 		= $form['empID']['#post']['helpline_no'];
	$helpline_name 		= $form['empID']['#post']['helpline_name'];
	$sel_provider_list 	= "".implode("", $form['empID']['#post']['provider'])."";
	$sel_rated_list 	= "".implode("", $form['empID']['#post']['rated'])."";
	$additional_name 				= $form['empID']['#post']['additional_name'];
	
	$street_address 				= $form['empID']['#post']['street_address'];
	$supplemental_address_1 		= $form['empID']['#post']['supplemental_address_1'];
	$supplemental_address_2 		= $form['empID']['#post']['supplemental_address_2'];
	$city 							= $form['empID']['#post']['city'];
	$postal_code 					= $form['empID']['#post']['postal_code'];
	
	
	$first_name 	= $form['empID']['#post']['first_name'];
	$last_name 		= $form['empID']['#post']['last_name'];
	$phone_no 		= $form['empID']['#post']['phone_no'];
	$fax_no 		= $form['empID']['#post']['fax_no'];
	$email 			= $form['empID']['#post']['email'];
	
	//echo "<pre>".$emailid."  ".$eid."  ".$helpline_no."  ".$helpline_name; print_r($sel_provider_list); print_r($sel_rated_list); echo "</pre>"; exit;
	
	
	
	if (module_exists('civicrm')) {
		civicrm_initialize(TRUE);
		
		### updating organization helpline detail
		require_once "CRM/Core/BAO/CustomValueTable.php";
		
		$params = array('entityID'						=> $eid,
						'custom_6_'.$customid    		=> $helpline_no,
						'custom_9_'.$customid    		=> $helpline_name,
						'custom_10_'.$customid   		=> $sel_provider_list,
						'custom_12_'.$customid   		=> $sel_rated_list,
						'custom_21_'.$aname_customid   	=> $additional_name
						);
		$contact = CRM_Core_BAO_CustomValueTable::setValues($params);
		//echo "<pre>"; print_r($contact); echo "</pre>"; exit;
		
		
		### updating organization details
		require_once "CRM/Core/DAO/Address.php";
		$address = new CRM_Core_DAO_Address();
		$address->whereAdd('contact_id = '.$eid.' AND is_primary = 1');
		if($address->find(true)){
			$address->street_address			= $street_address;
			$address->supplemental_address_1	= $supplemental_address_1;
			$address->supplemental_address_2	= $supplemental_address_2;
			$address->city						= $city;
			$address->postal_code				= $postal_code;
			
			$address->update();
		}
		else{
			$address = new CRM_Core_DAO_Address();
			$address->contact_id					= $eid;
			$address->location_type_id			= 1;
			$address->is_primary				= 1;
			$address->street_address			= $street_address;
			$address->supplemental_address_1	= $supplemental_address_1;
			$address->supplemental_address_2	= $supplemental_address_2;
			$address->city						= $city;
			$address->postal_code				= $postal_code;
			$address->insert();
		}
	
		
		### update contact's detail
		require_once "api/v2/Contact.php";
		$params = array(
                    'contact_id'				=> $cid,
                    'first_name'    			=> $first_name,
                    'last_name'     			=> $last_name,
					);
		$contact =&civicrm_contact_update( $params );
		
		### updating contact's phone & fax details
		require_once "CRM/Core/DAO/Phone.php";
		$phone = new CRM_Core_DAO_Phone();
		$phone->whereAdd('contact_id = '.$cid);
		$phone->find();
		
		while($phone->fetch()){
			if($phone->phone_type_id == 1)
				$phone->phone = $phone_no;
			else if($phone->phone_type_id == 3)
				$phone->phone = $fax_no;
				
			$phone->update();
		}
		
		### updating contact's emailID
		global $user;
		//echo "<pre>"; print_r($user); echo "</pre>"; exit;
		if($user->mail != $email){
			## in civi
			require_once "CRM/Core/DAO/Email.php";
			$emailobj = new CRM_Core_DAO_Email();
			$emailobj->get($emailid);
			$emailobj->email = $email;
			$emailobj->update();
			
			## in drupal
			db_query("UPDATE {users} SET mail = '%s' WHERE uid = %d", $email, $user->uid);
		}
		echo "<pre>"; print_r($user); echo "</pre>"; //exit;
		
		form_set_error('err',t('Helpline detail updated.'));
	}
	else{
		// civicrm module not exist
		echo "Error: civicrm module does not exist";
	}

}

############### EDIT MY DETAIL ##################################################
function contact_my_edit_page() {
	global $user;
		
	$output .= drupal_get_form('contact_my_edit_form');
	return $output;
	
}

function contact_my_edit_form()
{
	############ get user's contact id info from civicrm ##########
	global $user;
	
	
	if (module_exists('civicrm')) {
		civicrm_initialize(TRUE);
		require_once "api/v2/Contact.php";
		
		### get contact id from user's emailID ####
		$params = array('email'   => $user->mail,);
		$contacts = civicrm_contact_search( $params );
			foreach($contacts as $cid => $contact){
				break;
			}
		
		### get contact detail
		require_once "CRM/Contact/DAO/Contact.php";
		$contact = new CRM_Contact_DAO_Contact();
		$contact->get($cid);
		$contact->find(true);
		
		### get contact's address
		require_once "CRM/Core/DAO/Address.php";
		$address = new CRM_Core_DAO_Address();
		$address->whereAdd("contact_id = ".$cid." AND is_primary = 1");
		$address->find(true);
		
		//echo "<pre>"; print_r($address); echo "</pre>"; exit;
				
		### build profile edit form ####################
		
		$form['#token'] = $user->uid ? $user->name . $user->mail : '';
		
		$form['cID'] = array('#type' => 'value', '#value' => $cid);
		$form['aID'] = array('#type' => 'value', '#value' => $address->id);
				
		$form['first_name'] = array('#type' => 'textfield',
		'#title' => t('First Name'),
		'#maxlength' => 255,
		'#default_value' => $contact->first_name,);
		
		$form['last_name'] = array('#type' => 'textfield',
		'#title' => t('Last Name'),
		'#maxlength' => 255,
		'#default_value' => $contact->last_name,);
		
		$form['street_address'] = array('#type' => 'textfield',
		'#title' => t('Address line 1'),
		'#maxlength' => 255,
		'#default_value' => $address->street_address,);
		
		$form['supplemental_address_1'] = array('#type' => 'textfield',
		'#title' => t('Address line 2'),
		'#maxlength' => 255,
		'#default_value' => $address->supplemental_address_1,);
		
		$form['supplemental_address_2'] = array('#type' => 'textfield',
		'#title' => t('Address line 3'),
		'#maxlength' => 255,
		'#default_value' => $address->supplemental_address_2,);
		
		$form['city'] = array('#type' => 'textfield',
		'#title' => t('City'),
		'#maxlength' => 150,
		'#size' => 20,
		'#default_value' => $address->city,);
		
		$form['postal_code'] = array('#type' => 'textfield',
		'#title' => t('Postal Code'),
		'#maxlength' => 150,
		'#size' => 20,
		'#default_value' => $address->postal_code,);
		
		$form['submit'] = array('#type' => 'submit', '#value' => t('Update'),);

		return $form;
	}
	else{
		// civicrm module not exist
		echo "Error: civicrm module does not exist";
	}
}


function contact_my_edit_form_validate($form, &$form_state) 
{
    
}

function contact_my_edit_form_submit($form, &$form_state){
	### update employer's helpline detail ##############
	//echo "<pre>"; print_r($form); print_r($form_state); echo "</pre>"; exit;
	
	$cid			= $form['cID']['#value'];
	$aid			= $form['aID']['#value'];
	
	$first_name 				= $form['cID']['#post']['first_name'];
	$last_name 					= $form['cID']['#post']['last_name'];
	$street_address 			= $form['cID']['#post']['street_address'];
	$supplemental_address_1 	= $form['cID']['#post']['supplemental_address_1'];
	$supplemental_address_2 	= $form['cID']['#post']['supplemental_address_2'];
	$city 						= $form['cID']['#post']['city'];
	$postal_code 				= $form['cID']['#post']['postal_code'];
	
	
	### updating contact detail
	if (module_exists('civicrm')) {
		civicrm_initialize(TRUE);
		
		### update contact's detail
		require_once "api/v2/Contact.php";
		$params = array(
                    'contact_id'				=> $cid,
                    'first_name'    			=> $first_name,
                    'last_name'     			=> $last_name,
					);
		$contact =&civicrm_contact_update( $params );
		//echo "<pre>"; print_r($contact); echo "</pre>"; exit;
		
		### update contact's address
		require_once "CRM/Core/DAO/Address.php";
		$address = new CRM_Core_DAO_Address();
		
		if($aid)
			$address->get($aid);
		
		$address->contact_id				= $cid;
		$address->location_type_id			= 1;
		$address->is_primary				= 1;
		$address->street_address			= $street_address;
		$address->supplemental_address_1	= $supplemental_address_1;
		$address->supplemental_address_2	= $supplemental_address_2;
		$address->city						= $city;
		$address->postal_code				= $postal_code;
		
		if($aid)
			$address->update();
		else
			$address->insert();
		
		form_set_error('err',t('Profile updated.'));
	}
	else{
		// civicrm module not exist
		echo "Error: civicrm module does not exist";
	}

}

?>