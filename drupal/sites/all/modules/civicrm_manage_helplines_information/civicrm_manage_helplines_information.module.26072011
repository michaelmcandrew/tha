<?php/* +--------------------------------------------------------------------+ | CiviCRM version 3.3                                                | +--------------------------------------------------------------------+ | Copyright CiviCRM LLC (c) 2004-2010                                | +--------------------------------------------------------------------+ | This file is a part of CiviCRM.                                    | |                                                                    | | CiviCRM is free software; you can copy, modify, and distribute it  | | under the terms of the GNU Affero General Public License           | | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   | |                                                                    | | CiviCRM is distributed in the hope that it will be useful, but     | | WITHOUT ANY WARRANTY; without even the implied warranty of         | | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               | | See the GNU Affero General Public License for more details.        | |                                                                    | | You should have received a copy of the GNU Affero General Public   | | License and the CiviCRM Licensing Exception along                  | | with this program; if not, contact CiviCRM LLC                     | | at info[AT]civicrm[DOT]org. If you have questions about the        | | GNU Affero General Public License or the licensing of CiviCRM,     | | see the CiviCRM license FAQ at http://civicrm.org/licensing        | +--------------------------------------------------------------------+*//** * * @package CRM * @copyright CiviCRM LLC (c) 2004-2010 * $Id$ * */ //New Org Profile iddefine( 'CIVICRM_MANAGE_HELPLINES_INFO_NEW_ORG_PROFILE_ID' ,   '5' );//Custom data set group iddefine( 'CIVICRM_MANAGE_HELPLINES_INFO_CUSTOM_DATE_GROUP_ID' ,   '39' );//Custom Profile Id for 'Membership Application (Full Voting)'define( 'CIVICRM_FULL_VOTING_MEMBERSHIP__APPLICATION_PROFILE_ID' ,   '16' );//Relationship Type ID for "Directory Admin of"define( 'CIVICRM_MANAGE_HELPLINES_INFO_DIRECTORY_ADMIN_RELATIONSHIP_ID' ,   '12' );//Group ID for "Directory Approval Group"define( 'CIVICRM_MANAGE_HELPLINES_INFO_DIRECTORY_APPROVAL_GROUP_ID' ,   '39' );//Activity Type ID for "Pending Directory Request"define( 'CIVICRM_MANAGE_HELPLINES_INFO_PENDING_DIRECTORY_REQUEST_ACITIVITY_ID' ,   '51' );//Activity Type ID for "Directory Renewal"define( 'CIVICRM_MANAGE_HELPLINES_INFO_PENDING_DIRECTORY_RENEWAL_ACITIVITY_ID' ,   '52' );//Activity Type ID for "Directory Updated"define( 'CIVICRM_MANAGE_HELPLINES_INFO_PENDING_DIRECTORY_UPDATED_ACITIVITY_ID' ,   '53' );//Activity Type ID for "New Directory Information Added"define( 'CIVICRM_MANAGE_HELPLINES_INFO_NEW_DIRECTORY_INFORMATION_ADDED_ACITIVITY_ID' ,   '55' );//Message Template ID for "Directory Request Letter"define( 'CIVICRM_MANAGE_HELPLINES_INFO_DIRECTORY_REQUEST_MESSAGE_TEMLPATE_ID' ,   '44' );//Message Template ID for "Directory Approved Letter"define( 'CIVICRM_MANAGE_HELPLINES_INFO_DIRECTORY_APPROVED_MESSAGE_TEMLPATE_ID' ,   '45' );// "Directory Admin" - Relationship Type Iddefine( 'CIVICRM_MANAGE_HELPLINES_INFO_DIRECTORY_ADMIN_RELATIONSHIP_TYPE_ID' ,   '12' );// "Member Rep" - Relationship Type Iddefine( 'CIVICRM_MANAGE_HELPLINES_INFO_MEMBER_REP_RELATIONSHIP_TYPE_ID' ,   '10' );  function civicrm_manage_helplines_information_civicrm_config( &$config ) {    $template =& CRM_Core_Smarty::singleton( );        $infoRoot = dirname( __FILE__ );        $infoDir = $infoRoot . DIRECTORY_SEPARATOR . 'templates';        if ( is_array( $template->template_dir ) ) {        array_unshift( $template->template_dir, $infoDir );    } else {        $template->template_dir = array( $infoDir, $template->template_dir );    }        // also fix php include path    $include_path = $infoRoot . PATH_SEPARATOR . get_include_path( );    set_include_path( $include_path );}function civicrm_manage_helplines_information_civicrm_pageRun( &$page ) {        require_once 'CRM/Core/BAO/UFMatch.php';    require_once 'api/v2/Contact.php';    require_once 'CRM/Utils/System.php';            $name = $page->getVar( '_name' );        if ($name == 'CRM_Contact_Page_View_CustomData') {        $group_id = CRM_Utils_Array::value('gid', $_GET, '');        if ($group_id == CIVICRM_MANAGE_HELPLINES_INFO_CUSTOM_DATE_GROUP_ID) {            global $user;            /*$contact_id = CRM_Core_BAO_UFMatch::getContactId( $user->uid );            $org_id = CRM_Utils_Array::value('cid', $_GET, '');            $sql = "SELECT * FROM civicrm_activity ca LEFT JOIN civicrm_activity_target cat ON ca.id = cat.activity_id WHERE ca.source_contact_id = '$contact_id' AND ca.status_id = '1' AND ca.activity_type_id = '".CIVICRM_MANAGE_HELPLINES_INFO_PENDING_DIRECTORY_UPDATED_ACITIVITY_ID."' AND cat.target_contact_id = '$org_id'";            $dao = CRM_Core_DAO::executeQuery($sql);            if($dao->fetch()) {                drupal_set_message('Your directory description may not show your previous updates. Your change request is being reviewed by THA staff. Please visit later to find the updates.');                            }*/            //$role = implode(', ', $user->roles);            $role = $user->roles;            if (in_array("authenticated user", $role) && in_array("competent user", $role) && count($role) == 2 ) {                $page->assign('HideEditDeleteButtons' , 1);            }            CRM_Utils_System::setTitle( ts('Helplines Directory Entries') );                     }         }        if($name == 'CRM_Contact_Page_DashBoard' || $name == 'CRM_Contact_Page_View_Summary') {        global $user;                $contact_id = CRM_Core_BAO_UFMatch::getContactId( $user->uid );        //$role = implode(', ', $user->roles);        $role = $user->roles;        //if($role == 'authenticated user') {        if (in_array("authenticated user", $role) && in_array("competent user", $role) && count($role) == 2 ) {            //header("Location: $referer_page");            //$url_array = @explode( '&' , '');            drupal_goto( 'civicrm/user' , "reset=1&id={$contact_id}" );            CRM_Utils_System::civiExit( );            }        //exit;        }        if($name == 'CRM_Contact_Page_View_UserDashBoard') {        global $user;        $userid  = $user->uid;                $contact_id = CRM_Core_BAO_UFMatch::getContactId( $user->uid );                if(!isset($_GET['id'])) {            drupal_goto( 'civicrm/user' , "reset=1&id={$contact_id}" );            CRM_Utils_System::civiExit( );              }                $contact_type = CRM_Core_DAO::getFieldValue( 'CRM_Contact_DAO_Contact', $contact_id, 'contact_type' );                $org_data = civicrm_manage_helplines_information_civicrm_pageRun_find_related_org($contact_id, $org_data, 0);                require_once 'api/v2/Membership.php';                $html .= "<table><tr><th>Organisation Name</th><th>Edit</th><th>&nbsp;</th><th>&nbsp;</th></tr>";        while(list($k , $v) = @each($org_data) ) {            //print_r ($v); echo "<hr/>";            //$org_params = array('contact_id' => $v['id']);            //$org_details = & civicrm_contact_get($org_params);            //print_r ($org_details);exit;                        //civicrm/contact/relatedcontact&amp;action=update&amp;reset=1&amp;cid=18340&amp;rcid=18337                                    $html .= "<tr><td>".$v['name']."</td>";             $civi_url = CRM_Utils_System::url( 'civicrm/contact/relatedcontact', "action=update&reset=1&cid={$v['id']}&rcid={$contact_id}"  );            $html .= "<td><a href =\"$civi_url\">Edit Contact Information</a></td>";                        $current_date = date("Y-m-d");            $temp_date = strtotime($current_date);                        $renewal_url_array =  array();            $result = & civicrm_contact_memberships_get( $v['id'] );                        if ($result['record_count'] != 0) {                while(list($mKey , $mVal) = @each($result) ) {                    if ($mKey !== 'record_count') {                                            $end_date = $mVal[$mKey]['membership_end_date'];                        $temp_end_date = strtotime($end_date);                                                $diff = abs($temp_end_date - $temp_date);                        $days = floor(($diff - $years * 365*60*60*24 - $months*30*60*60*24)/ (60*60*24));                                            //$temp_url = CRM_Utils_System::url( 'civicrm/profile/edit', "id={$v['id']}&gid=".CIVICRM_FULL_VOTING_MEMBERSHIP__APPLICATION_PROFILE_ID."&reset=1"  );                        //$renewal_url_array[] = "<a href =\"$temp_url\">Renew Membership</a>";                        }                }                $renewal_url = @implode('<br />' , $renewal_url_array );                $html .= "<td>".$renewal_url."</td>";            } else {                $html .= "<td>&nbsp;</td>";            }                                    $custom_url = CRM_Utils_System::url( 'civicrm/contact/view/cd/edit', "tableId={$v['id']}&cid={$v['id']}&groupId=".CIVICRM_MANAGE_HELPLINES_INFO_CUSTOM_DATE_GROUP_ID."&action=update&reset=1"  );            $html .= "<td><a href =\"$custom_url\">View Directory Info</a></td></tr>";            //http://dev.nfpservices.co.uk/helplines-test/index.php?q=civicrm/contact/view/cd/view&tableId=18439&cid=18439&gid=6&reset=1                    }                //exit;                $new_org_url = CRM_Utils_System::url( 'civicrm/profile/create', "reset=1&gid=".CIVICRM_MANAGE_HELPLINES_INFO_NEW_ORG_PROFILE_ID."&rcid={$contact_id}");        $html .= "<tr><td><a class='button' href =\"$new_org_url\"><span>New organisation</span></a></td></tr>";        $html .= "</table>";                    $page->assign('OrgHtml', $html);                       } }function civicrm_manage_helplines_information_civicrm_custom( $op, $groupID, $entityID, &$params ) {        if ($op == 'edit' && $groupID == CIVICRM_FULL_VOTING_MEMBERSHIP__APPLICATION_PROFILE_ID ) {        $original_description = "";            while(list($k , $v) = @each($params)) {            if ($v['column_name'] == 'please_describe_briefly_your_hel_165') {                $new_description = trim($v['value']);                $description_id = trim($v['id']);            }        }                require_once 'CRM/Core/Session.php';        $session = CRM_Core_Session::singleton();                $desc_name = 'original_description_'.$description_id;        $original_description = trim($session->get($desc_name));                if (!empty($new_description)) {            if( strcasecmp (trim($original_description) , trim($new_description)) != 0 ) {                $sql = "UPDATE civicrm_value_directory_information_16 SET please_describe_briefly_your_hel_165 = '$original_description' WHERE id = '$description_id'";                $dao = CRM_Core_DAO::executeQuery($sql);                                $session->set('new_description' , $new_description);            }                  }        }          if ($op == 'create' && $groupID == CIVICRM_MANAGE_HELPLINES_INFO_CUSTOM_DATE_GROUP_ID ) {        //CIVICRM_MANAGE_HELPLINES_INFO_NEW_DIRECTORY_INFORMATION_ADDED_ACITIVITY_ID                //print_r ($params);exit;        //$custom_sql = "SELECT member_id_4 FROM $tableName WHERE entity_id = $entityID";        //$custom_dao = CRM_Core_DAO::executeQuery( $custom_sql, CRM_Core_DAO::$_nullArray );                global $user;        $rcid = CRM_Core_BAO_UFMatch::getContactId( $user->uid );                require_once 'api/v2/Activity.php';        $params = array(           'activity_type_id' => CIVICRM_MANAGE_HELPLINES_INFO_NEW_DIRECTORY_INFORMATION_ADDED_ACITIVITY_ID,           'source_contact_id' => $rcid,           'target_contact_id' => $entityID,           'subject' => "New Directory Information. Helpline Name - ".$params[0]['value'],           'status_id' => 1,           'activity_date_time' => date('YmdHis')         );                 $act = civicrm_activity_create($params);                $activity_id = $act['id'];                 $sql = "SELECT * FROM civicrm_group_contact WHERE group_id = '".CIVICRM_MANAGE_HELPLINES_INFO_DIRECTORY_APPROVAL_GROUP_ID."'";        $dao = CRM_Core_DAO::executeQuery( $sql );                  while($dao->fetch()) {              require_once 'CRM/Activity/DAO/ActivityAssignment.php';              $assignment = new CRM_Activity_DAO_ActivityAssignment( );              $assignment->activity_id = $activity_id;              $assignment->assignee_contact_id = $dao->contact_id;              $assignment->save( );        }    }        if ($op == 'edit' && $groupID == CIVICRM_MANAGE_HELPLINES_INFO_CUSTOM_DATE_GROUP_ID ) {            $original_description = "";            while(list($k , $v) = @each($params)) {            if ($v['column_name'] == 'a__please_describe_briefly_your__345') {                $new_description = trim($v['value']);                $description_id = trim($v['id']);            }        }                require_once 'CRM/Core/Session.php';        $session = CRM_Core_Session::singleton();                $desc_name = 'original_description_'.$description_id;        $original_description = trim($session->get($desc_name));                if (!empty($new_description)) {            if( strcasecmp (trim($original_description) , trim($new_description)) != 0 ) {                $sql = "UPDATE civicrm_value_directory_form_39 SET a__please_describe_briefly_your__345 = '$original_description' WHERE id = '$description_id'";                $dao = CRM_Core_DAO::executeQuery($sql);                                global $user;                $rcid = CRM_Core_BAO_UFMatch::getContactId( $user->uid );                                require_once 'api/v2/Activity.php';                $params = array(                   'activity_type_id' => CIVICRM_MANAGE_HELPLINES_INFO_PENDING_DIRECTORY_UPDATED_ACITIVITY_ID,                   'source_contact_id' => $rcid,                   'target_contact_id' => $entityID,                   'subject' => "Directory Description Updated",                   'status_id' => 1,                   'activity_date_time' => date('YmdHis') ,                   'details' => $new_description                 );                                 $act = civicrm_activity_create($params);                                $activity_id = $act['id'];                                 $sql = "SELECT * FROM civicrm_group_contact WHERE group_id = '".CIVICRM_MANAGE_HELPLINES_INFO_DIRECTORY_APPROVAL_GROUP_ID."'";                $dao = CRM_Core_DAO::executeQuery( $sql );                                  while($dao->fetch()) {                      require_once 'CRM/Activity/DAO/ActivityAssignment.php';                      $assignment = new CRM_Activity_DAO_ActivityAssignment( );                      $assignment->activity_id = $activity_id;                      $assignment->assignee_contact_id = $dao->contact_id;                      $assignment->save( );                }            }        }    }}function civicrm_manage_helplines_information_civicrm_buildForm( $formName, &$form ) {    if ($formName == 'CRM_Profile_Form_Edit' && $form->getVar( '_gid' ) == CIVICRM_MANAGE_HELPLINES_INFO_NEW_ORG_PROFILE_ID){        $rcid = CRM_Utils_Array::value('rcid', $_GET, '');        $form->addElement('hidden', 'rcid', $rcid );        $form->addElement('hidden', 'profile_id', $form->getVar( '_gid' ) );    }        if ($formName == 'CRM_Profile_Form_Edit' && $form->getVar( '_gid' ) == CIVICRM_FULL_VOTING_MEMBERSHIP__APPLICATION_PROFILE_ID){        $org_id = CRM_Utils_Array::value('id', $_GET, '');                require_once 'CRM/Core/Session.php';        $session = CRM_Core_Session::singleton();                $sql = "SELECT please_describe_briefly_your_hel_165 AS description , id as id FROM civicrm_value_directory_information_16 WHERE entity_id = '$org_id'";        $dao = CRM_Core_DAO::executeQuery($sql);                while($dao->fetch()) {            $description = $dao->description;            if(!empty($description)) {                $description_id = $dao->id;                  $desc_name = 'original_description_'.$description_id;                $session->set($desc_name , $description);              }        }                                 $form->addElement('hidden', 'org_id', $org_id );    }    if ($formName == 'CRM_Contribute_Form_Contribution_Main' && $form->getVar( '_id' ) == 1) {        $org_id = CRM_Utils_Array::value('cid', $_GET, '');        if ($org_id) {          $form->addElement('hidden', 'org_id', $org_id );          $form->addElement('hidden', 'membership_renewal', '1' );        }      }    if ($formName == 'CRM_Contribute_Form_Contribution_Confirm') {        require_once 'CRM/Core/Session.php';        $session = CRM_Core_Session::singleton( );        $org_id = $session->get('org_id');        if ($org_id) {          $membership_renewal = $session->get('membership_renewal');           $form->addElement('hidden', 'org_id', $org_id );          $form->addElement('hidden', 'membership_renewal', $membership_renewal );        }      }    if ($formName == 'CRM_Contact_Form_CustomData' && $form->getVar( '_groupID' ) == CIVICRM_MANAGE_HELPLINES_INFO_CUSTOM_DATE_GROUP_ID ) {            $related_orgid = CRM_Utils_Array::value('cid', $_GET, '');                require_once 'CRM/Core/Session.php';        $session = CRM_Core_Session::singleton();                $sql = "SELECT * FROM civicrm_value_directory_form_39 WHERE entity_id = '$related_orgid'";        $dao = CRM_Core_DAO::executeQuery($sql);                while($dao->fetch()) {            $description = $dao->a__please_describe_briefly_your__345;            if(!empty($description)) {                $description_id = $dao->id;                  $desc_name = 'original_description_'.$description_id;                $session->set($desc_name , $description);              }        }            $form->addElement('hidden', 'related_orgid', $related_orgid );        $form->addElement('hidden', 'check_activity', '1' );                global $user;        //$role = implode(', ', $user->roles);        //if($role == 'authenticated user') {        $role = $user->roles;        if (in_array("authenticated user", $role) && in_array("competent user", $role) && count($role) == 2 ) {            $custom_row_id = $_GET['custom_row_id'];            if (empty($custom_row_id)) $custom_row_id = $_POST['custom_row_id'];            $form->assign('customRowId' , $custom_row_id);            }        CRM_Utils_System::setTitle( ts('Helplines Directory Entries') );    }}function civicrm_manage_helplines_information_civicrm_post( $op, $objectName, $objectId, &$objectRef ) {    if ($op == 'edit' && $objectName == 'Activity') {                $activity_id = $objectId;        $activity_type_id = $objectRef->activity_type_id;        //print_r ($objectRef);exit;                $sql = "SELECT * FROM civicrm_activity_target WHERE activity_id = '$activity_id'";        $dao = CRM_Core_DAO::executeQuery( $sql );        $dao->fetch();                if ($objectRef->activity_type_id == CIVICRM_MANAGE_HELPLINES_INFO_PENDING_DIRECTORY_REQUEST_ACITIVITY_ID && $objectRef->status_id == 2) {                   $current_date = date("Y-m-d");           $temp_date = strtotime($current_date);           $renewalDate = strtotime ( "+1 year" , $temp_date ) ;           $renewalDate = date ( 'YmdHis' , $renewalDate );                   require_once 'api/v2/Activity.php';           $params = array(             'activity_type_id' => CIVICRM_MANAGE_HELPLINES_INFO_PENDING_DIRECTORY_RENEWAL_ACITIVITY_ID,             'source_contact_id' => $objectRef->source_contact_id,             'target_contact_id' => $dao->target_contact_id,             'subject' => "Directory Renewal Scheduled",             'status_id' => 1,             'activity_date_time' => $renewalDate           );                      $act = civicrm_activity_create($params);           $activity_id = $act['id'];                      $sql = "SELECT * FROM civicrm_group_contact WHERE group_id = '".CIVICRM_MANAGE_HELPLINES_INFO_DIRECTORY_APPROVAL_GROUP_ID."'";           $dao = CRM_Core_DAO::executeQuery( $sql );                       while($dao->fetch()) {                require_once 'CRM/Activity/DAO/ActivityAssignment.php';                $assignment = new CRM_Activity_DAO_ActivityAssignment( );                $assignment->activity_id = $activity_id;                $assignment->assignee_contact_id = $dao->contact_id;                $assignment->save( );           }                      ## getting contact detail           require_once 'api/v2/Contact.php';           $contactParams = array('id' => $objectRef->source_contact_id);           $contact =& civicrm_contact_get($contactParams);                      $params = civicrm_manage_helplines_information_civicrm_post_compose_Message_Template( $contact , CIVICRM_MANAGE_HELPLINES_INFO_DIRECTORY_APPROVED_MESSAGE_TEMLPATE_ID , $objectRef->source_contact_id );                          require_once 'CRM/Utils/Mail.php';           // Comment to abort sending email           $sent = CRM_Utils_Mail::send( $params);        }                        if ($objectRef->activity_type_id == CIVICRM_MANAGE_HELPLINES_INFO_PENDING_DIRECTORY_RENEWAL_ACITIVITY_ID && $objectRef->status_id == 2) {           $temp_date = strtotime($objectRef->activity_date_time);           $renewalDate = strtotime ( "+1 year" , $temp_date ) ;           $renewalDate = date ( 'YmdHis' , $renewalDate );                    require_once 'api/v2/Activity.php';           $params = array(             'activity_type_id' => CIVICRM_MANAGE_HELPLINES_INFO_PENDING_DIRECTORY_RENEWAL_ACITIVITY_ID,             'source_contact_id' => $objectRef->source_contact_id,             'target_contact_id' => $dao->target_contact_id,             'subject' => "Directory Renewal Scheduled",             'status_id' => 1,             'activity_date_time' => $renewalDate           );                      $act = civicrm_activity_create($params);           $activity_id = $act['id'];                      $sql = "SELECT * FROM civicrm_group_contact WHERE group_id = '".CIVICRM_MANAGE_HELPLINES_INFO_DIRECTORY_APPROVAL_GROUP_ID."'";           $dao = CRM_Core_DAO::executeQuery( $sql );                       while($dao->fetch()) {                require_once 'CRM/Activity/DAO/ActivityAssignment.php';                $assignment = new CRM_Activity_DAO_ActivityAssignment( );                $assignment->activity_id = $activity_id;                $assignment->assignee_contact_id = $dao->contact_id;                $assignment->save( );           }        }            }      //creating relationship between course administrator and course    if ($op == 'create' && $objectName == 'Organization') {                require_once 'api/v2/Relationship.php';                // Drupal function to get the 'q' from URL, if the url is http://192.168.1.178/alpha/?q=civicrm/profile/create&reset=1&org_id=75&gid=14         $p1 = arg(0); // will return 'civicrm'        $p2 = arg(1); // will return 'profile'        $p3 = arg(2); // will return 'create'                if ( $p1 == 'civicrm' && $p2 == 'profile' && $p3 == 'create'&& $_POST['profile_id'] == CIVICRM_MANAGE_HELPLINES_INFO_NEW_ORG_PROFILE_ID ) {              $rcid = $_POST['rcid'];                            ## getting contact detail              require_once 'api/v2/Contact.php';              $contactParams = array('id' => $rcid);              $contact =& civicrm_contact_get($contactParams);                            $params = array(                    'contact_id_a'         => $rcid,                    'contact_id_b'         => $objectId,                    'relationship_type_id' => CIVICRM_MANAGE_HELPLINES_INFO_DIRECTORY_ADMIN_RELATIONSHIP_ID ,                    'start_date'           => array('d'=> date("d"),'M'=> date("m"),'Y'=>date("Y")),                    'end_date'             => array('d'=> date("d"),'M'=> date("m"),'Y'=>date("Y")+1),                    'is_active'            => 1,                    'is_permission_a_b'    => 1                    );               $result = & civicrm_relationship_create( $params );               if ( civicrm_error ( $result )) {                  return $result['error_message'];              }                            require_once 'api/v2/Activity.php';              $params = array(                 'activity_type_id' => CIVICRM_MANAGE_HELPLINES_INFO_PENDING_DIRECTORY_REQUEST_ACITIVITY_ID,                 'source_contact_id' => $rcid,                 'target_contact_id' => $objectId,                 'subject' => 'Pending Directory Request',                 'status_id' => 1,                 'activity_date_time' => date('YmdHis')              );                             $act = civicrm_activity_create($params);                            $activity_id = $act['id'];                           $sql = "SELECT * FROM civicrm_group_contact WHERE group_id = '".CIVICRM_MANAGE_HELPLINES_INFO_DIRECTORY_APPROVAL_GROUP_ID."'";              $dao = CRM_Core_DAO::executeQuery( $sql );                            //$activity_id = $activity->id;                             while($dao->fetch()) {                  require_once 'CRM/Activity/DAO/ActivityAssignment.php';                  $assignment = new CRM_Activity_DAO_ActivityAssignment( );                  $assignment->activity_id = $activity_id;                  $assignment->assignee_contact_id = $dao->contact_id;                  //$assignment->with_contact_id = $relatedOrgID;                  $assignment->save( );              }                            $params = civicrm_manage_helplines_information_civicrm_post_compose_Message_Template( $contact , CIVICRM_MANAGE_HELPLINES_INFO_DIRECTORY_REQUEST_MESSAGE_TEMLPATE_ID , $rcid);                             require_once 'CRM/Utils/Mail.php';              // Comment to abort sending email              $sent = CRM_Utils_Mail::send( $params );                            $referer_page = CRM_Utils_System::url( 'civicrm/user', "reset=1&id={$rcid}"  );              header("Location: $referer_page");              CRM_Utils_System::civiExit( );              //http://dev.nfpservices.co.uk/helplines-test/index.php?q=civicrm/user&reset=1&id=18337                          }                      }}function civicrm_manage_helplines_information_civicrm_pageRun_find_related_org($contactID, &$org_data, $org_offset = 0) {    // we have the user, get his relations, and maybe we need to ditch this loser    $currentRelationships         = CRM_Contact_BAO_Relationship::getRelationship(                                                        $contactID                                                        );                                                            $org_data = array();        //CIVICRM_MANAGE_HELPLINES_INFO_DIRECTORY_ADMIN_RELATIONSHIP_TYPE_ID    //CIVICRM_MANAGE_HELPLINES_INFO_MEMBER_REP_RELATIONSHIP_TYPE_ID        //print_r ($currentRelationships);exit;    foreach ($currentRelationships as $cr) {        // does the user have permission to edit the org        if ($cr['is_active'] and $cr['is_permission_a_b'] and ($cr['relationship_type_id'] == CIVICRM_MANAGE_HELPLINES_INFO_DIRECTORY_ADMIN_RELATIONSHIP_TYPE_ID OR $cr['relationship_type_id'] == CIVICRM_MANAGE_HELPLINES_INFO_MEMBER_REP_RELATIONSHIP_TYPE_ID )) {            $org_data[] = array(                                'id' => $cr['cid'],                                'name' => $cr['name'],                                );        }    }    //print_r ($org_data);exit;    // which org to display?	if (isset($org_data[$org_offset])) {        $contactID = $org_data[$org_offset]['id'];    }	       return $org_data;}function civicrm_manage_helplines_information_civicrm_postProcess( $formName, &$form ) {    if ($formName == 'CRM_Contact_Form_CustomData') {        $org_id = $form->_tableID;                if(!empty($org_id)) {                        require_once 'api/v2/ActivityContact.php';                        $params = array('contact_id' => $org_id);            $result = civicrm_activity_contact_get($params);                        $activity_id = "";                        if ($result['is_error'] == 0 ) {                $activitiesArray = $result['result'];                 while(list($k,$v) = @each($activitiesArray)) {                    if($v['status_id'] == 1 && $v['activity_type_id'] == CIVICRM_MANAGE_HELPLINES_INFO_PENDING_DIRECTORY_RENEWAL_ACITIVITY_ID) {                        $activity_date_time = $v['activity_date_time'];                        $current_date = date("Y-m-d");;                        $diff = abs(strtotime($activity_date_time) - strtotime($current_date));                        $days = floor(($diff - $years * 365*60*60*24 - $months*30*60*60*24)/ (60*60*24));                        if ($days <= 30 ) {                            $activity_id = $k;                            $activity_date_time = $v['activity_date_time'];                            $source_contact_id =$v['source_contact_id'];                        }                        }                }                if(!empty($activity_id)) {                    $activity_type_id = CIVICRM_MANAGE_HELPLINES_INFO_PENDING_DIRECTORY_RENEWAL_ACITIVITY_ID;                    //print_r ($objectRef);exit;                                        $sql = "SELECT * FROM civicrm_activity_target WHERE activity_id = '$activity_id'";                    $dao = CRM_Core_DAO::executeQuery( $sql );                    $dao->fetch();                                        $temp_date = strtotime($activity_date_time);                    $renewalDate = strtotime ( "+1 year" , $temp_date ) ;                    $renewalDate = date ( 'YmdHis' , $renewalDate );                                                    require_once 'api/v2/Activity.php';                    $params = array(                         'activity_type_id' => CIVICRM_MANAGE_HELPLINES_INFO_PENDING_DIRECTORY_RENEWAL_ACITIVITY_ID,                         'source_contact_id' => $source_contact_id,                         'target_contact_id' => $dao->target_contact_id,                         'subject' => "Directory Renewal Scheduled",                         'status_id' => 1,                         'activity_date_time' => $renewalDate                    );                                        $act = civicrm_activity_create($params);                                         $new_activity_id = $act['id'];                                         $sql = "SELECT * FROM civicrm_group_contact WHERE group_id = '".CIVICRM_MANAGE_HELPLINES_INFO_DIRECTORY_APPROVAL_GROUP_ID."'";                    $dao = CRM_Core_DAO::executeQuery( $sql );                                          while($dao->fetch()) {                          require_once 'CRM/Activity/DAO/ActivityAssignment.php';                          $assignment = new CRM_Activity_DAO_ActivityAssignment( );                          $assignment->activity_id = $new_activity_id;                          $assignment->assignee_contact_id = $dao->contact_id;                          $assignment->save( );                    }                                        $activity_sql = "UPDATE civicrm_activity SET status_id = '2' WHERE id = '$activity_id'";                    $activity_dao = CRM_Core_DAO::executeQuery( $activity_sql );                }                }            }            global $user;        $contact_id = CRM_Core_BAO_UFMatch::getContactId( $user->uid );        //$role = implode(', ', $user->roles);        //if($role == 'authenticated user') {        $role = $user->roles;        if (in_array("authenticated user", $role) && in_array("competent user", $role) && count($role) == 2 ) {            drupal_goto( 'civicrm/user' , "reset=1&id={$contact_id}" );            CRM_Utils_System::civiExit( );            }        }}function civicrm_manage_helplines_information_civicrm_post_compose_Message_Template( $contact , $template_id , $contact_id) {    $template_query = "SELECT * FROM civicrm_msg_template WHERE id = '".$template_id."'";    $template_dao = CRM_Core_DAO::executeQuery( $template_query );        if(!$template_dao->fetch()){      print("Not able to get Email Template");      exit;    }        $text   = $template_dao->msg_text;    $html   = $template_dao->msg_html;    $subject  = $template_dao->msg_subject;        require_once("CRM/Mailing/BAO/Mailing.php");    $mailing = new CRM_Mailing_BAO_Mailing;    $mailing->body_text = $text;    $mailing->body_html = $html;    $tokens = $mailing->getTokens();        require_once("CRM/Utils/Token.php");    $subject = CRM_Utils_Token::replaceDomainTokens($subject, $domain, true, $tokens['text']);    $text    = CRM_Utils_Token::replaceDomainTokens($text,    $domain, true, $tokens['text']);    $html    = CRM_Utils_Token::replaceDomainTokens($html,    $domain, true, $tokens['html']);    if ($contact_id) {      $subject = CRM_Utils_Token::replaceContactTokens($subject, $contact, false, $tokens['text']);      $text    = CRM_Utils_Token::replaceContactTokens($text,    $contact, false, $tokens['text']);      $html    = CRM_Utils_Token::replaceContactTokens($html,    $contact, false, $tokens['html']);    }        $params['text']       = $text;    $params['html']       = $html;    $params['subject']      = $subject;    //$params['contactId']    = $contactID;        #### live ###### uncomment it    $params['toName']     = $contact[$contact_id]['display_name'];    $params['toEmail']    = $contact[$contact_id]['email'];       # Left this in as hard coded for now as the default from email address doesn't seem to work    # We can probably do something with the contribution type for the from email addresses    $params['from']         = 'noreply@helplines.co.uk';        return $params;}    