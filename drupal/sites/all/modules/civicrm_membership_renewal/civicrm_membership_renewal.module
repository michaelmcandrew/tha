<?php/* +--------------------------------------------------------------------+ | CiviCRM version 3.3                                                | +--------------------------------------------------------------------+ | Copyright CiviCRM LLC (c) 2004-2010                                | +--------------------------------------------------------------------+ | This file is a part of CiviCRM.                                    | |                                                                    | | CiviCRM is free software; you can copy, modify, and distribute it  | | under the terms of the GNU Affero General Public License           | | Version 3, 19 November 2007 and the CiviCRM Licensing Exception.   | |                                                                    | | CiviCRM is distributed in the hope that it will be useful, but     | | WITHOUT ANY WARRANTY; without even the implied warranty of         | | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.               | | See the GNU Affero General Public License for more details.        | |                                                                    | | You should have received a copy of the GNU Affero General Public   | | License and the CiviCRM Licensing Exception along                  | | with this program; if not, contact CiviCRM LLC                     | | at info[AT]civicrm[DOT]org. If you have questions about the        | | GNU Affero General Public License or the licensing of CiviCRM,     | | see the CiviCRM license FAQ at http://civicrm.org/licensing        | +--------------------------------------------------------------------+*//** * * @package CRM * @copyright CiviCRM LLC (c) 2004-2010 * $Id$ * */ define( 'CIVICRM_MEMBERSHIP_RENEWAL_DECLARATION_PROFILE_ID', '24' ); define( 'CIVICRM_MEMBERSHIP_RENEWAL_MEMBERS_AWAITING_RENEWAL_GROUP_ID', '45' );define( 'CIVICRM_MEMBERSHIP_RENEWAL_MEMBERS_AWAITING_RENEWAL_DECLARED_GROUP_ID', '46' ); function civicrm_membership_renewal_civicrm_buildForm( $formName, &$form ) {    require_once 'CRM/Core/BAO/UFMatch.php';    require_once 'api/v2/Contact.php';    if ($formName == 'CRM_Profile_Form_Edit' && $form->getVar( '_gid' ) ==  CIVICRM_MEMBERSHIP_RENEWAL_DECLARATION_PROFILE_ID) {        global $user;        if ($user->uid) {             $userid  = $user->uid;            $contact_id = CRM_Core_BAO_UFMatch::getContactId( $user->uid );            $contact_type = CRM_Core_DAO::getFieldValue( 'CRM_Contact_DAO_Contact', $contact_id, 'contact_type' );            $org_data =  civicrm_membership_renewal_civicrm_buildForm_find_related_org($contact_id, $org_data, 0);                        $org_id = $org_data[0]['id'];                        require_once 'api/v2/GroupContact.php';            $group_params = array( 'contact_id' => $org_id );            $group_result = civicrm_group_contact_get( $group_params );                        while(list($k,$v)=@each($group_result)) {                if ($v['group_id'] == CIVICRM_MEMBERSHIP_RENEWAL_MEMBERS_AWAITING_RENEWAL_GROUP_ID) {                    //print_r ($v);exit;                    $form->addElement('hidden', 'org_id', $org_id );                     }            }                    } else {            drupal_set_message("Please Login");            $dest = drupal_get_destination();            drupal_goto('user', $dest); // this remembers where the user is coming from        }    }}    function civicrm_membership_renewal_civicrm_post( $op, $objectName, $objectId, &$objectRef ) {    if ($op == 'create' && $objectName == 'Profile') {        require_once 'api/v2/GroupContact.php';        if ($objectRef['uf_group_id'] == CIVICRM_MEMBERSHIP_RENEWAL_DECLARATION_PROFILE_ID) {                    $org_id = $objectRef['org_id'];                        $sql = "SELECT * FROM civicrm_group_contact WHERE contact_id = '$org_id' AND group_id = '".CIVICRM_MEMBERSHIP_RENEWAL_MEMBERS_AWAITING_RENEWAL_GROUP_ID."'";            $dao = CRM_Core_DAO::executeQuery($sql);                        if ($dao->fetch()) {                     //Remove contact from renewal awaiting group                $params = array(                        'contact_id.1' => $org_id,                        'group_id'     => CIVICRM_MEMBERSHIP_RENEWAL_MEMBERS_AWAITING_RENEWAL_GROUP_ID                        );                $result = civicrm_group_contact_remove( $params );            }                        $sql1 = "SELECT * FROM civicrm_group_contact WHERE contact_id = '$org_id' AND group_id = '".CIVICRM_MEMBERSHIP_RENEWAL_MEMBERS_AWAITING_RENEWAL_DECLARED_GROUP_ID."'";            $dao1 = CRM_Core_DAO::executeQuery($sql1);                        if (!$dao->fetch()) {                //Add contact to renewal declared group                $params = array(                        'contact_id.1' => $org_id,                        'group_id'     => CIVICRM_MEMBERSHIP_RENEWAL_MEMBERS_AWAITING_RENEWAL_DECLARED_GROUP_ID                        );                $result = civicrm_group_contact_add( $params );            }            }    }}function civicrm_membership_renewal_civicrm_buildForm_find_related_org($contactID, &$org_data, $org_offset = 0) {    // we have the user, get his relations, and maybe we need to ditch this loser    $currentRelationships = CRM_Contact_BAO_Relationship::getRelationship( $contactID );                                                            $org_data = array();    foreach ($currentRelationships as $cr) {        // does the user have permission to edit the org        if ($cr['is_active'] and $cr['is_permission_a_b']) {            $org_data[] = array(                                'id' => $cr['cid'],                                'name' => $cr['name'],                                );        }    }    //print_r ($org_data);exit;    // which org to display?	if (isset($org_data[$org_offset])) {        $contactID = $org_data[$org_offset]['id'];    }	       return $org_data;}